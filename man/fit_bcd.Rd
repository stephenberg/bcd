% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bcdWrapper.R
\name{fit_bcd}
\alias{fit_bcd}
\title{Fit model by block coordinate descent}
\usage{
fit_bcd(X, y, family = c("gaussian", "multinomial", "poisson",
  "logistic"), groups, penaltyFactor, lambda = NULL,
  lambdaMinRatio = 1e-04, nLambda = 100, sampleWeights = NULL,
  maxit = 1e+05, tolerance = 10^-12, offset = NULL,
  eigenValueTolerance = 10^-9, rescale = TRUE, useDevTol = TRUE,
  devTol = 0.9)
}
\arguments{
\item{X}{design matrix}

\item{y}{response vector (or matrix)}

\item{family}{type of regression: one of "gaussian", "multinomial", "poisson", or "logistic"}

\item{groups}{list containing the group index of each column}

\item{penaltyFactor}{vector containing penalty level for each group}

\item{lambda}{penalty vector for model fitting}

\item{lambdaMinRatio}{value to use for lambdaMin/lambdaMax (defaults to 0.0001)}

\item{nLambda}{number of lambda values to use}

\item{sampleWeights}{different weights for each sample}

\item{maxit}{maximum number of coordinate descent iterations (default 100000)}

\item{tolerance}{solution tolerance (default 10^-12)}

\item{offset}{offset to use for Poisson regression}

\item{eigenValueTolerance}{tolerance for deciding whether columns in a group are linearly independent (default 10^-9)}

\item{rescale}{force columns to have norm 1 after orthogonalization (defaults to TRUE)}

\item{useDevTol}{use deviance tolerance to stop solving after deviance is reduced by devTol}

\item{devTol}{tolerance for deviance reduction before model fitting is stopped}
}
\value{
model fit
}
\description{
Fits a model by block coordinate descent
}
\examples{
data(exampleData)

#Linear regression
fit_linear=fit_bcd(X=X,y=y_gaussian,family="gaussian",groups=grouping,penaltyFactor=penaltyFactor)

#Logistic regression
fit_logistic=fit_bcd(X=X,y=y_binary,family="logistic",groups=grouping,penaltyFactor=penaltyFactor)

#Multinomial regression
fit_multinomial=fit_bcd(X=X,y=as.factor(y_multinomial),family="logistic",groups=grouping,penaltyFactor=penaltyFactor)

#Multiresponse linear regression
fit_multirespone=fit_bcd(X=X,y=y_multiresponse,family="gaussian",groups=grouping,penaltyFactor=penaltyFactor)

#Poisson regression
fit_poisson=fit_bcd(X=X,y=y_count,family="poisson",groups=grouping,penaltyFactor=penaltyFactor)

#Logistic regression with overlapping groups and implicit duplication of design matrix columns
grouping=list(as.integer(1),2:10,11:30,11:50)
fit_overlap=fit_bcd(X=X,y=y_binary,family="logistic",groups=grouping,penaltyFactor=penaltyFactor)

}
